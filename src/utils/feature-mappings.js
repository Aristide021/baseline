/**
 * Feature mappings from code patterns to web-features database IDs
 * Generated by rebuild-mappings.mjs - DO NOT EDIT MANUALLY
 */

const CSS_PROPERTY_MAPPING = {
  "display": {
    "grid": "grid",
    "flex": "flexbox",
    "contents": "display-contents"
  },
  
  // Grid Layout Properties
  "grid-template-columns": "grid",
  "grid-template-rows": "grid", 
  "grid-template-areas": "grid",
  "grid-column": "grid",
  "grid-row": "grid",
  "grid-area": "grid",
  "grid-auto-columns": "grid",
  "grid-auto-rows": "grid",
  "grid-auto-flow": "grid",
  
  // Flexbox Layout Properties
  "flex": "flexbox",
  "flex-direction": "flexbox",
  "flex-wrap": "flexbox",
  "flex-flow": "flexbox",
  "justify-content": "flexbox",
  "align-items": "flexbox",
  "align-content": "flexbox",
  "align-self": "flexbox",
  "order": "flexbox",
  "flex-grow": "flexbox",
  "flex-shrink": "flexbox",
  "flex-basis": "flexbox",
  
  // Gap Properties (Grid + Flexbox)
  "gap": "flexbox-gap",
  "grid-gap": "flexbox-gap",
  "column-gap": "flexbox-gap",
  "row-gap": "flexbox-gap",
  
  // Container Queries
  "container-type": "container-queries",
  "container-name": "container-queries",
  "container": "container-queries",
  
  // Font Variant Properties 
  "font-variant": "font-variant",
  "font-variant-caps": "font-variant-caps",
  "font-variant-east-asian": "font-variant-east-asian",
  "font-variant-ligatures": "font-variant-ligatures",
  "font-variant-numeric": "font-variant-numeric",
  "font-variation-settings": "font-variation-settings",
  "font-feature-settings": "font-feature-settings",
  
  // Logical Properties
  "margin-inline-start": "logical-properties",
  "margin-inline-end": "logical-properties", 
  "margin-block-start": "logical-properties",
  "margin-block-end": "logical-properties",
  "padding-inline-start": "logical-properties",
  "padding-inline-end": "logical-properties",
  "padding-block-start": "logical-properties",
  "padding-block-end": "logical-properties",
  "border-inline-start": "logical-properties",
  "border-inline-end": "logical-properties",
  "border-block-start": "logical-properties",
  "border-block-end": "logical-properties",
  
  // Animations and Transitions
  "animation": "animations-css",
  "animation-name": "animations-css",
  "animation-duration": "animations-css",
  "animation-timing-function": "animations-css",
  "animation-delay": "animations-css",
  "animation-iteration-count": "animations-css",
  "animation-direction": "animations-css",
  "animation-fill-mode": "animations-css",
  "animation-play-state": "animations-css",
  "transition": "transitions",
  "transition-property": "transitions",
  "transition-duration": "transitions",
  "transition-timing-function": "transitions",
  "transition-delay": "transitions",
  
  // Transform Properties
  "transform": "transforms2d",
  "transform-origin": "transforms2d",
  "transform-style": "transforms3d",
  "perspective": "transforms3d",
  "perspective-origin": "transforms3d",
  
  // Modern Layout & Sizing
  "aspect-ratio": "aspect-ratio",
  "object-fit": "object-fit",
  "object-position": "object-fit",
  
  // Color and Appearance
  "accent-color": "accent-color",
  "color-scheme": "color-scheme",
  "backdrop-filter": "backdrop-filter",
  "filter": "filter",
  "mix-blend-mode": "mix-blend-mode",
  "isolation": "mix-blend-mode",
  
  // Text and Typography
  "text-decoration-thickness": "text-decoration",
  "text-decoration-style": "text-decoration",
  "text-decoration-color": "text-decoration",
  "text-underline-offset": "text-decoration",
  "text-underline-position": "text-decoration",
  
  // Existing Properties
  "box-sizing": "box-sizing",
  "overflow": "overflow",
  "position": "absolute-positioning",
  "color": "currentcolor",
  "opacity": "opacity"
};

const JS_API_MAPPING = {
  // Web APIs
  "fetch": "fetch",
  "AbortController": "aborting",
  "AbortSignal": "aborting",
  "Request": "fetch",
  "Response": "fetch",
  "Headers": "fetch",
  "IntersectionObserver": "intersection-observer",
  "MutationObserver": "mutationobserver",
  "ResizeObserver": "resize-observer",
  "Worker": "dedicated-workers",
  "SharedWorker": "shared-workers",
  "ServiceWorker": "service-workers",
  "URL": "url",
  "URLSearchParams": "url",
  "Promise": "promise",
  "Map": "map",
  "Set": "set",
  "WeakMap": "weakmap",
  "WeakSet": "weakset",
  
  // Additional Web APIs (only valid ones)
  "ChannelMessaging": "channel-messaging",
  "Geolocation": "geolocation",
  "History": "history",
  "Notification": "notifications",
  "PointerEvent": "pointer-events",
  "WebSocket": "websockets",
  "XMLHttpRequest": "xhr",
  
  // Canvas and Graphics APIs
  "Canvas": "canvas",
  "CanvasRenderingContext2D": "canvas",
  "WebGLRenderingContext": "webgl",
  "ImageData": "canvas",
  "OffscreenCanvas": "offscreen-canvas",
  
  // Media APIs (only valid ones)
  "HTMLVideoElement": "video",
  "HTMLAudioElement": "audio",
  
  // Crypto and Security APIs removed - not in web-features
  
  // Array Methods
  "Array.prototype.includes": "array-includes",
  "Array.prototype.find": "array-find",
  "Array.prototype.findIndex": "array-find",
  "Array.from": "array-from",
  "Array.prototype.flat": "array-flat",
  "Array.prototype.flatMap": "array-flat",
  "Array.prototype.at": "array-at",
  
  // Object Methods removed - not in web-features
  
  // String Methods (only valid ones)
  "String.prototype.includes": "string-includes",
  "String.prototype.replaceAll": "string-replaceall",
  
  // Number and Math removed - not in web-features
  
  // Modern JavaScript Syntax (mapped from detector IDs to web-features IDs)
  "js-async-await": "async-await",
  "js-classes": "class-syntax", 
  "js-destructuring-object": "destructuring",
  "js-destructuring-array": "destructuring", 
  "js-nullish-coalescing": "nullish-coalescing",
  "js-spread-syntax": "spread",
  "js-template-literals": "template-literals",
  // Invalid syntax mappings removed
  
  // These syntax features don't exist in web-features, so they're removed from mappings
};

const HTML_FEATURE_MAPPING = {
  // Input Types
  "input[type=\"color\"]": "input-color",
  "input[type=\"date\"]": "input-date-time",
  "input[type=\"datetime-local\"]": "input-date-time",
  "input[type=\"email\"]": "input-date-time",
  "input[type=\"month\"]": "input-date-time",
  "input[type=\"number\"]": "input-number",
  "input[type=\"range\"]": "input-range",
  "input[type=\"search\"]": "input-date-time",
  "input[type=\"tel\"]": "input-date-time",
  "input[type=\"time\"]": "input-date-time",
  "input[type=\"url\"]": "input-date-time",
  "input[type=\"week\"]": "input-date-time",
  
  // Form Elements
  "input": "input",
  "button": "button",
  "select": "select",
  "textarea": "textarea",
  "label": "label",
  "fieldset": "fieldset",
  "legend": "fieldset",
  "datalist": "datalist",
  "output": "output",
  "meter": "meter",
  "progress": "progress",
  
  // Interactive Elements
  "dialog": "dialog",
  "details": "details",
  "summary": "details",
  
  // Semantic Elements
  "article": "article",
  "aside": "aside",
  "footer": "header-footer",
  "header": "header-footer",
  "main": "main",
  "nav": "nav",
  "section": "section",
  // figure/figcaption removed - not in web-features
  "mark": "mark",
  "time": "time",
  "address": "address",
  
  // Media Elements
  "audio": "audio",
  "video": "video",
  "picture": "picture",
  "source": "picture",
  // track removed - not in web-features
  "canvas": "canvas",
  "embed": "embed",
  "object": "object",
  
  // Text Content Elements (only valid ones)
  "pre": "pre",
  "blockquote": "blockquote",
  "cite": "cite",
  "code": "code",
  "kbd": "kbd",
  "samp": "samp",
  "sub": "sub-sup",
  "sup": "sub-sup",
  "small": "small",
  "abbr": "abbr",
  "dfn": "dfn",
  
  // List Elements removed - not in web-features
  
  // Table Elements
  "table": "table",
  "thead": "table",
  "tbody": "table",
  "tfoot": "table",
  "tr": "table",
  "th": "table",
  "td": "table",
  "caption": "table",
  "colgroup": "table",
  "col": "table",
  
  // Web Components
  "slot": "slot",
  "template": "template",
  
  // Attributes (only valid ones)
  "contenteditable": "contenteditable",
  "lang": "lang",
  "spellcheck": "spellcheck",
  "accesskey": "accesskey",
  "tabindex": "tabindex",
  
  // Form Attributes (only valid ones)
  "autofocus": "autofocus"
};

/**
 * Get feature ID for JavaScript API calls
 * @param {string} apiName - API or function name
 * @returns {string|null} Feature ID or null if not mapped
 */
function getJSAPIFeature(apiName) {
  return JS_API_MAPPING.hasOwnProperty(apiName) ? JS_API_MAPPING[apiName] : null;
}

/**
 * Get feature ID for JavaScript property access
 * @param {string} propertyAccess - Property access string (e.g., 'Array.prototype.includes')
 * @returns {string|null} Feature ID or null if not mapped  
 */
function getJSPropertyFeature(propertyAccess) {
  return JS_API_MAPPING[propertyAccess] || null;
}

/**
 * Get feature ID for CSS properties
 * @param {string} property - CSS property name
 * @param {string} value - CSS property value (optional)
 * @returns {string|null} Feature ID or null if not mapped
 */
function getCSSFeature(property, value = null) {
  const mapping = CSS_PROPERTY_MAPPING[property];
  
  if (!mapping) return null;
  
  if (typeof mapping === 'string') {
    return mapping;
  } else if (typeof mapping === 'object' && value) {
    return mapping[value] || null;
  }
  
  return null;
}

/**
 * Get feature ID for CSS properties (alias for getCSSFeature)
 * @param {string} property - CSS property name
 * @param {string} value - CSS property value (optional)
 * @returns {string|null} Feature ID or null if not mapped
 */
function getCSSPropertyFeature(property, value = null) {
  return getCSSFeature(property, value);
}

// CSS Selector Mappings
const CSS_SELECTOR_MAPPING = {
  ":is": "is",
  ":where": "where",
  ":has": "has",
  ":not": "not-selector",
  ":nth-child": "nth-child",
  ":nth-last-child": "nth-child",
  ":nth-of-type": "nth-child",
  ":nth-last-of-type": "nth-child",
  ":first-child": "first-child",
  ":last-child": "last-child",
  ":only-child": "only-child",
  ":first-of-type": "first-of-type",
  ":last-of-type": "last-of-type",
  ":only-of-type": "only-of-type",
  ":target": "target-pseudo-class",
  ":focus": "focus-pseudo-class",
  ":focus-visible": "focus-visible",
  ":focus-within": "focus-within",
  ":hover": "hover-pseudo-class",
  ":active": "active-pseudo-class",
  ":visited": "visited-pseudo-class",
  ":checked": "checked-pseudo-class",
  ":disabled": "disabled-pseudo-class",
  ":enabled": "enabled-pseudo-class",
  ":required": "required-pseudo-class",
  ":optional": "optional-pseudo-class",
  ":valid": "valid-pseudo-class",
  ":invalid": "invalid-pseudo-class",
  ":in-range": "in-range-pseudo-class",
  ":out-of-range": "out-of-range-pseudo-class",
  ":read-only": "read-only-pseudo-class",
  ":read-write": "read-write-pseudo-class",
  ":indeterminate": "indeterminate",
  "::before": "before-after-pseudo-elements",
  "::after": "before-after-pseudo-elements",
  "::first-line": "first-line-first-letter",
  "::first-letter": "first-line-first-letter",
  "::selection": "selection-pseudo-element",
  "::backdrop": "backdrop-pseudo-element",
  "::marker": "marker-pseudo-element",
  "::placeholder": "placeholder-pseudo-element"
};

/**
 * Get feature ID for CSS selectors
 * @param {string} selector - CSS selector
 * @returns {string|null} Feature ID or null if not mapped
 */
function getCSSSelectorFeature(selector) {
  // Clean selector and check for matches
  const cleanSelector = selector.trim();
  return CSS_SELECTOR_MAPPING[cleanSelector] || null;
}

// CSS Function Mappings  
const CSS_FUNCTION_MAPPING = {
  "calc": "calc",
  "min": "min-max-clamp",
  "max": "min-max-clamp",
  "clamp": "min-max-clamp",
  "var": "custom-properties",
  "env": "safe-area-inset",
  "rgb": "rgb-function",
  "rgba": "rgba-function",
  "hsl": "hsl-function",
  "hsla": "hsla-function",
  "url": "url-function",
  "attr": "attr-function",
  "counter": "counter-function",
  "linear-gradient": "linear-gradient",
  "radial-gradient": "radial-gradient",
  "conic-gradient": "conic-gradient",
  "repeating-linear-gradient": "repeating-gradients",
  "repeating-radial-gradient": "repeating-gradients",
  "repeating-conic-gradient": "repeating-gradients",
  "fit-content": "fit-content",
  "minmax": "minmax",
  "repeat": "repeat-function"
};

/**
 * Get feature ID for CSS functions
 * @param {string} functionName - CSS function name
 * @returns {string|null} Feature ID or null if not mapped
 */
function getCSSFunctionFeature(functionName) {
  return CSS_FUNCTION_MAPPING[functionName] || null;
}

// CSS At-Rule Mappings
const CSS_AT_RULE_MAPPING = {
  "@media": "media-queries",
  "@supports": "supports",
  "@import": "import-css",
  "@charset": "charset",
  "@namespace": "namespace",
  "@keyframes": "keyframes",
  "@page": "page-css",
  "@font-face": "font-face",
  "@layer": "cascade-layers",
  "@container": "container-queries",
  "@property": "custom-properties",
  "@counter-style": "counter-style"
};

/**
 * Get feature ID for CSS at-rules
 * @param {string} atRule - CSS at-rule name (with @)
 * @returns {string|null} Feature ID or null if not mapped
 */
function getCSSAtRuleFeature(atRule) {
  return CSS_AT_RULE_MAPPING[atRule] || null;
}

/**
 * Get feature ID for HTML elements
 * @param {string} element - HTML element or pattern
 * @returns {string|null} Feature ID or null if not mapped
 */
function getHTMLFeature(element) {
  return HTML_FEATURE_MAPPING[element] || null;
}

module.exports = {
  CSS_PROPERTY_MAPPING,
  CSS_SELECTOR_MAPPING,
  CSS_FUNCTION_MAPPING,
  CSS_AT_RULE_MAPPING,
  JS_API_MAPPING, 
  HTML_FEATURE_MAPPING,
  getJSAPIFeature,
  getJSPropertyFeature, 
  getCSSFeature,
  getCSSPropertyFeature,
  getCSSSelectorFeature,
  getCSSFunctionFeature, 
  getCSSAtRuleFeature,
  getHTMLFeature
};
